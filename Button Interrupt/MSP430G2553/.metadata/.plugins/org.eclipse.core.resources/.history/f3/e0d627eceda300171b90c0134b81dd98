#include <msp430.h>
int main(void)  //Main program
{
   WDTCTL = WDTPW | WDTHOLD; // Stop watchdog timer
   P1SEL = 0;
   P1DIR |= BIT0 + BIT6; // Set P1.0 to output and P1.3 to input direction
   P1DIR &= ~(BIT3);
   P1OUT |= BIT3;
   P1REN ^= BIT3;
   P1IE |= BIT3; // P1.3 interrupt enabled
  P1IES |= BIT3; //Interrupt is HIGH to LOW
   P1IFG &= ~BIT3; // P1.3 interrupt flag cleared
   int i = 0;   // volatile to prevent optimization
   int j = 0;


    while(1)
    {
        i ++;
        j++;
        if(i>30000)
        {i=0;P1OUT^=BIT6;}
        if(j>10000)
        {j=0;P1OUT^=BIT0;}
        }
   _BIS_SR(LPM4_bits + GIE);  // Enable all interrupts (Clear GIE in SR)
}

#pragma vector=PORT1_VECTOR
__interrupt void Port_1(void){

            P1OUT ^= BIT0; //toggles LED when interupt triggered
            P1IFG &= ~BIT3; //Clears interupt flag register needed otherwise will be stuck in infinite loop
}

