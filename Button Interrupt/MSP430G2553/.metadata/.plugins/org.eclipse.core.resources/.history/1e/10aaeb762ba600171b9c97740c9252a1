#include <msp430.h>
#define LED_0 BIT0
#define LED_6 BIT6
#define LED_OUT P1OUT
#define LED_DIR P1DIR
#define BUTTON BIT3
// Global Variables
unsigned int blink = 0;
unsigned int star = 0;
unsigned char leds = 0x0;
void main(void)
{
WDTCTL = WDTPW + WDTHOLD; // Stop watchdog timer
LED_DIR = 0x0;
LED_DIR |= (LED_0);
leds = 0x0;
// it boots with all leds blinking
leds = (LED_0);
LED_OUT = leds;
P1IE |= BUTTON;
P1REN |= BUTTON;
__enable_interrupt();
for (;;)
{
LED_OUT ^= leds; // toggle leds
__delay_cycles(100000); // SW Delay of 10000 cycles at 1Mhz
}
}
// Port 1 interrupt service routine
#pragma vector=PORT1_VECTOR
__interrupt void Port_1(void)
{
P1OUT ^= LED_6;
        ;
P1IFG &= ~BUTTON; // P1.3 IFG cleared

}
