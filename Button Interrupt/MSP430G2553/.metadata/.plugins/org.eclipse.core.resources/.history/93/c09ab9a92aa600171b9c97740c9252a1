#include <msp430.h>
#define LED_0 BIT0
#define LED_OUT P1OUT
#define LED_DIR P1DIR
// Global Variables
unsigned int blink = 0;
unsigned int star = 0;
unsigned char leds = 0x0;
void main(void)
{
WDTCTL = WDTPW + WDTHOLD; // Stop watchdog timer
LED_DIR = 0x0;
LED_DIR |= (LED_0);
leds = 0x0;
// it boots with all leds blinking
leds = (LED_0);
LED_OUT = leds;
P1IE |= BUTTON;
__enable_interrupt();
for (;;)
{
LED_OUT ^= leds; // toggle leds
__delay_cycles(100000); // SW Delay of 10000 cycles at 1Mhz
}
}
// Port 1 interrupt service routine
#pragma vector=PORT1_VECTOR
__interrupt void Port_1(void)
{
P1IFG &= ~BUTTON; // P1.3 IFG cleared
switch (star)
{
case 1:
leds = LED_0;
star = 2;
LED_OUT = 0x0;
break;
default:
// first interrupt, turn off all leds
// getting ready to start
leds = 0x0;
// next time it gets interrupted is going to
// turn on the first led
star = 1;
// turn off all leds
LED_OUT = 0x0;
break;
}
}
