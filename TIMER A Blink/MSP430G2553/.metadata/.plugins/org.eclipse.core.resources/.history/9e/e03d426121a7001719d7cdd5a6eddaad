#include <msp430.h>
#define SWC BIT3
#define LED BIT0
#define LED2 BIT6
void blink(int t)
{int i;
P1OUT=0;
P1DIR|=LED;
P1OUT|=LED;
P1DIR|=LED2;
P1OUT|=LED2;
for (i=0;i<t;i++)
{
P1OUT|=LED;
__delay_cycles(500000);
P1OUT&=~LED;
__delay_cycles(500000);
}
}
void delay_ms(unsigned int ms ) //Delay_MS
{
unsigned int i;
for (i = 0; i<= ms; i++)
__delay_cycles(5000); //Built-in function that suspends the execution for 500 cycles
}
void main()
{
WDTCTL = WDTPW + WDTHOLD;
P1DIR &=~SWC; // Input
P1IE |= SWC; // Interrupt Enabled
P1REN ^=SWC; // Internal Pull Ups On // Do not use internal pull ups on Launchpad V1.4
P1OUT |=SWC; // Yay! Its a pull up!
P1IFG &=~SWC; //Clear Flag if not set!
__bis_SR_register(LPM4_bits+GIE);
while(1)
{}
}
#pragma vector=PORT1_VECTOR//ISR Sub-routine
__interrupt void Port_1(void)
{
if(P1IFG&SWC)
{
P1OUT ^= LED2;
blink(5);
P1IFG &= ~SWC;//clear flag
}
}

#pragma vector=TIMER0_A0_VECTOR
__interrupt void Timer_A0(void)
{
LED_POUT ^= LED_PIN; //Toggle the LED
//When we exit the interrupt routine we return to Low Power Mode
}
