#include <msp430.h>

void main(void){
    WDTCTL = WDTPW + WDTHOLD;
    P1DIR |= BIT0 + BIT6;
    P1OUT &= ~(BIT0 + BIT6);
    P1SEL &= ~(BIT0 + BIT6);
    P1SEL2 &= ~(BIT0 + BIT6);

    TA0CTL = TASSEL_2 + MC_1 + ID_3 + TACLR;
    TA0CCTL0 = CCIE;
    TA0CCR0 = 0xFFFF;
    P1IE |= BIT3;
    P1IES |= BIT3;
    P1REN |= BIT3;
    P1OUT |= BIT3;
    P1IFG &= ~BIT3;
    __enable_interrupt();
    __bis_SR_register(LPM0_bits + GIE);

    for(;;){}
    return 0;
}
#pragma vector = TIMER0_A0_VECTOR
__interrupt void TIMER0_A0_ISR (void)
{
    P1OUT ^= BIT0;
}

#pragma vector = PORT1_VECTOR
__interrupt void Port_1(void)
{
    if((P1IN & BIT3) == 0x0000){

    P1IES &= ~BIT3;
    TA0CTL = TASSEL_2 + MC_1 + ID_3 + TACLR;
    P1IFG &= ~BIT3;
    P1OUT |= BIT0;
}
    else{
        P1IES |= BIT3;
        TA0CTL = TASSEL_2 + MC_1 + ID_3 + TACLR;
        TA0CCR0 = TA0R;
        P1OUT &= BIT0;
        P1IFG &= ~BIT3;
        }
        }

