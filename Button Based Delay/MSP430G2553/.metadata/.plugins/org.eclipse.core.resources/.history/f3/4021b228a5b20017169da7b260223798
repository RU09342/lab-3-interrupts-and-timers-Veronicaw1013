#include <msp430g2553.h>

void main(void) {

    WDTCTL = WDTPW | WDTHOLD;   // Stop watchdog timer
    P1DIR |= BIT0 + BIT6;               //sets pins 1.0 and 1.6 as output
    P1REN|= BIT3;             //enable pull-up resistor on
    P1OUT|= BIT3;             //
    P1IE |= BIT3;             //enable BIT3 interrupt
    P1IES |= BIT3;            //set as falling edge/ rising edge
    P1IFG &= ~BIT3;           //clear interrupt flag
    TA0CCTL0 = CCIE;            // sets timer on compare mode
    TA0CCR0 = 10000;          //
    TA0CTL= TASSEL_1+MC_1;      //
    __bis_SR_register(LPM0_bits + GIE);  //enter LPM0 mode and enable global interrupt

}



//Port 1 ISR

#pragma vector=PORT1_VECTOR

    __interrupt void PORT_1(void)

    {

        if (P1IES & BIT3)

        {

            TA1CTL = TASSEL_1 + MC_2;  //SMCLK, CONT MODE, DIV 8

            P1OUT ^= BIT6;             //Turns on BIT6

            P1IES &= ~BIT3;          //flip edge

        }

        else

        {

            TA0CCR0 = TA1R;            //set TA1R to capture compare to timer a_0

            P1OUT &= ~BIT6;            //turn off led

            P1IES |= BIT3;           //flip edge

            TA1CTL = TACLR;            //Clear timerA_1

        }



        P1IFG &= ~BIT3;              //clears interrupt flag to exit interrupt

}

// Timer A0 ISR

#pragma vector= TIMER0_A0_VECTOR

    __interrupt void Timer_A0 (void)

    {

        P1OUT ^= BIT0;                 //Toggle BIT0

    }
